@extends('site.layouts.master')
@section('title')ƒê√≥ng g√≥p b√†i vi·∫øt - {{ $config->web_title }}@endsection
@section('description'){{ strip_tags(html_entity_decode($config->introduction)) }}@endsection
@section('image'){{@$config->image->path ?? ''}}@endsection

@section('css')
    <link type="text/css" rel="stylesheet" href="/site/css/editor-content.css">

@endsection

@section('content')
    <style>
        /* ====== Layout ====== */
        .submit-article { padding: 32px 16px; background: #fafafb; }
        .sa-container { max-width: 900px; margin: 0 auto; background: #fff; border-radius: 16px; padding: 28px; box-shadow: 0 6px 24px rgba(0,0,0,.06); }
        .sa-title { text-align:center; font-size:28px; margin: 0 0 6px; font-weight:700; }
        .sa-intro { color:#4a5568; line-height:1.7; margin: 8px 0; }
        .sa-subtitle { margin-top: 20px; font-size: 20px; font-weight: 700; }

        .sa-alert { border-radius: 10px; padding: 12px 14px; margin: 14px 0; }
        .sa-alert--success{ background:#ecfdf5; color:#046c4e; border:1px solid #a7f3d0;}
        .sa-alert--error{ background:#fff1f2; color:#9f1239; border:1px solid #fecdd3;}
        .req{ color:#e11d48; }

        .sa-grid { display: grid; grid-template-columns: 1fr 1fr; gap: 18px; margin-top: 10px; }
        .sa-field { display:flex; flex-direction:column; }
        .sa-field--full{ grid-column: 1 / -1; }
        .sa-field label { font-weight:600; margin-bottom:8px; }
        .sa-field input[type="text"],
        .sa-field input[type="email"],
        .sa-field textarea {
            border:1px solid #e5e7eb; border-radius:10px; padding: 12px 14px;
            outline: none; font-size: 15px; background:#fff;
        }
        .sa-field textarea{ resize: vertical; }
        .sa-field input:focus, .sa-field textarea:focus{ border-color:#27408B; box-shadow: 0 0 0 3px rgba(95,39,205,.12); }
        .sa-hint{ color:#6b7280; font-size:12px; margin-top:6px; }

        /* Dropzone */
        .sa-dropzone{
            position: relative; display:flex; align-items:center; justify-content:center; gap:10px;
            border:1.5px dashed #c7c8d2; border-radius:14px; padding: 18px; background:#f9fafb; cursor:pointer;
            transition: all .2s ease;
        }
        .sa-dropzone:focus{ outline:none; box-shadow:0 0 0 3px rgba(95,39,205,.15); border-color:#27408B; }
        .sa-dropzone:hover{ background:#f5f6ff; border-color:#27408B; }
        .sa-dropzone input[type="file"]{ position:absolute; inset:0; width:100%; height:100%; opacity:0; cursor:pointer; }
        .dz-icon{ font-size:22px; }
        .dz-text{ font-size:14px; color:#4b5563;}
        .dz-link{ color:#27408B; text-decoration:underline; cursor:pointer; }
        .sa-file-meta{ margin-top:8px; padding:10px 12px; background:#f3f4f6; border:1px solid #e5e7eb; border-radius:10px; font-size:14px; color:#374151; }

        /* Actions */
        .sa-action{ display:flex; align-items:center; gap:16px; margin-top: 18px; }
        .sa-btn{
            position:relative; display:inline-flex; align-items:center; justify-content:center; gap:10px;
            background:#27408B; color:#fff; border:none; border-radius:12px; padding:12px 18px; font-weight:700;
            cursor:pointer; transition: transform .05s ease, box-shadow .2s ease; box-shadow: 0 8px 20px rgba(95,39,205,.25);
        }
        .sa-btn:hover{ transform: translateY(-1px); box-shadow:0 10px 22px rgba(95,39,205,.32); }
        .sa-btn:disabled{ opacity:.6; cursor:not-allowed; box-shadow:none; }
        .sa-btn__spinner{
            --s: 0; width:18px; height:18px; border-radius:50%; border:3px solid rgba(255,255,255,.35);
            border-top-color:#fff; animation: sa-spin .8s linear infinite; display:none;
        }
        .sa-btn.loading .sa-btn__spinner{ display:inline-block; }
        .sa-btn.loading .sa-btn__text{ opacity:.85; }
        @keyframes sa-spin { to { transform: rotate(360deg); } }

        .sa-legal{ color:#4b5563; font-size:14px; margin:0; }
        .sa-check{ display:flex; align-items:flex-start; gap:8px; }
        .sa-check input{ margin-top:2px; }

        /* Responsive */
        @media (max-width: 768px){
            .sa-grid{ grid-template-columns: 1fr; }
            .sa-container{ padding: 20px; }
            .sa-title{ font-size:24px; }
        }

        .invalid-feedback {
            color: #dc3545;
        }
        /* ClassicEditor */
        .ck-editor__editable_inline {
            min-height: 420px;   /* ƒë·ªïi s·ªë t√πy √Ω */
            /* ho·∫∑c height: 420px; n·∫øu mu·ªën c·ªë ƒë·ªãnh */
        }
    </style>

    <style>
        /* D√†nh cho khung so·∫°n th·∫£o */
        .ck-content {
            font-weight: 400;                /* weight m·∫∑c ƒë·ªãnh */
        }

        /* Bold/italic/underline ph·∫£i hi·ªán ƒë√∫ng */
        .ck-content strong, .ck-content b { font-weight: 700 !important; }
        .ck-content em, .ck-content i      { font-style: italic !important; }
        .ck-content u                      { text-decoration: underline !important; }

        /* Danh s√°ch hi·ªÉn th·ªã ch·∫•m/s·ªë v√† c√≥ th·ª•t l·ªÅ */
        .ck-content ul { list-style: disc inside !important; }
        .ck-content ol { list-style: decimal inside !important;  }

        /* Blockquote cho d·ªÖ nh√¨n */
        .ck-content blockquote {
            border-left: 3px solid #e5e7eb;
            margin: .75rem 0; padding: .5rem .75rem;
            color: #555;
        }

    </style>
    <div class="content">
        <section>
            <div class="submit-article" ng-controller="Post" ng-cloak>
                <div class="sa-container">
                    <h1 class="sa-title">ƒê√≥ng g√≥p b√†i vi·∫øt</h1>
                    <p class="sa-intro">
                        T·∫°p ch√≠ c·ªßa ch√∫ng t√¥i hoan ngh√™nh c√°c b√†i vi·∫øt, √Ω ki·∫øn v√† n·ªôi dung ƒë√≥ng g√≥p t·ª´ c·ªông ƒë·ªìng.
                        Vui l√≤ng ƒë·ªçc k·ªπ h∆∞·ªõng d·∫´n bi√™n t·∫≠p tr∆∞·ªõc khi g·ª≠i b√†i. M·ªçi b√†i g·ª≠i c·∫ßn ƒë·∫£m b·∫£o t√≠nh nguy√™n g·ªëc
                        v√† tu√¢n th·ªß quy ƒë·ªãnh ph√°p lu·∫≠t v·ªÅ b·∫£n quy·ªÅn.
                    </p>
                    <p class="sa-intro">
                        ƒê·ªÉ b√†i vi·∫øt ƒë∆∞·ª£c xem x√©t, b·∫°n h√£y ƒëi·ªÅn v√†o m·∫´u d∆∞·ªõi ƒë√¢y (ho·∫∑c g·ª≠i qua email n·∫øu c·∫ßn).
                    </p>

                    {{-- Flash message --}}
                    @if (session('success'))
                        <div class="sa-alert sa-alert--success">{{ session('success') }}</div>
                    @endif
                    @if ($errors->any())
                        <div class="sa-alert sa-alert--error">
                            <strong>Vui l√≤ng ki·ªÉm tra l·∫°i:</strong>
                            <ul>
                                @foreach ($errors->all() as $e)
                                    <li>{{ $e }}</li>
                                @endforeach
                            </ul>
                        </div>
                    @endif

                    <h2 class="sa-subtitle">G·ª≠i b√†i vi·∫øt</h2>

                    <form id="articleForm" ng-submit="submit($event)"
                          enctype="multipart/form-data" novalidate>
                        <div class="sa-grid">
                            <div class="sa-field">
                                <label for="title">Ti√™u ƒë·ªÅ b√†i vi·∫øt <span class="req">*</span></label>
                                <input type="text" id="title" name="title" ng-model="post.title"  maxlength="180" placeholder="Nh·∫≠p ti√™u ƒë·ªÅ...">
                                <small class="sa-hint"><span id="titleCount">0</span>/180 k√Ω t·ª±</small>

                                <div class="invalid-feedback d-block" ng-if="errors['title']"><% errors['title'][0] %></div>
                            </div>

                            <div class="sa-field">
                                <label for="author_name">T√™n t√°c gi·∫£ <span class="req">*</span></label>
                                <input type="text" id="author_name" name="author_name" ng-model="post.author_name"  placeholder="V√≠ d·ª•: Nguy·ªÖn VƒÉn A">

                                <div class="invalid-feedback d-block" ng-if="errors['author_name']"><% errors['author_name'][0] %></div>
                            </div>


{{--                            <div class="sa-field sa-field--full">--}}
{{--                                <label for="contentEditor">N·ªôi dung b√†i vi·∫øt</label>--}}
{{--                                <textarea id="contentEditor" name="content_html"></textarea>--}}
{{--                                <small class="sa-hint">Tr√¨nh so·∫°n th·∫£o h·ªó tr·ª£ ƒë·ªãnh d·∫°ng, ·∫£nh, ti√™u ƒë·ªÅ...</small>--}}
{{--                            </div>--}}


                            <div class="sa-field sa-field--full">
                                <label>N·ªôi dung b√†i vi·∫øt</label>

                                <div id="contentEditor" class="ck-content" style="min-height:280px;"></div>


                                <textarea id="content_html" name="content_html" hidden></textarea>

                                <small class="sa-hint">Tr√¨nh so·∫°n th·∫£o h·ªó tr·ª£ ƒë·ªãnh d·∫°ng c∆° b·∫£n.</small>
                            </div>

                            <div class="sa-field sa-field--full">
                                <label>T·ªáp ƒë√≠nh k√®m (Doc/Docx/PDF, t·ªëi ƒëa 10MB)</label>

                                <div id="dropzone" class="sa-dropzone" tabindex="0">
                                    <div class="dz-icon">üìÑ</div>
                                    <div class="dz-text">
                                        K√©o & th·∫£ t·ªáp v√†o ƒë√¢y ho·∫∑c <span class="dz-link">ch·ªçn t·ªáp</span>
                                    </div>
                                    <input id="fileInput" type="file" name="attachment" file-model="post.attachment"
                                           accept=".doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document,application/pdf">
                                </div>
                                <div id="fileMeta" class="sa-file-meta" style="display:none;"></div>
                                <small class="sa-hint">Ch·ªâ ch·∫•p nh·∫≠n .doc, .docx, .pdf</small>
                            </div>
                        </div>

                        <div class="sa-action">
                            <button id="submitBtn" type="submit" class="sa-btn" ng-class="{'loading': loading}" ng-disabled="loading">
                                <span class="sa-btn__spinner" aria-hidden="true"></span>
                                <span class="sa-btn__text">G·ª≠i</span>
                            </button>
                            <p class="sa-legal">
                                <label class="sa-check">
                                    <input type="checkbox" name="copyright_confirm" value="1" required>
                                    T√¥i x√°c nh·∫≠n n·ªôi dung l√† c·ªßa t√¥i ho·∫∑c ƒë∆∞·ª£c ph√©p s·ª≠ d·ª•ng, v√† ƒë·ªìng √Ω cho t√≤a so·∫°n bi√™n t·∫≠p/xu·∫•t b·∫£n.
                                </label>
                            </p>


                        </div>
                        <div id="submitSuccess" class="sa-alert sa-alert--success" ng-if="submitNotice.show"  role="status" aria-live="polite">
                            <i class="fa fa-check-circle" aria-hidden="true"></i>
                            <div class="sa-alert__text">
                                <strong>C·∫£m ∆°n b·∫°n ƒë√£ ƒë√≥ng g√≥p b√†i vi·∫øt.</strong>
                                B·∫°n c√≥ th·ªÉ xem c√°c b√†i vi·∫øt ƒë√£ g·ª≠i trong menu <em>Qu·∫£n l√Ω t√†i kho·∫£n</em>.
                            </div>
                            <button type="button" class="sa-alert__close" ng-click="submitNotice.show=false" aria-label="ƒê√≥ng">&times;</button>
                        </div>
                    </form>
                </div>
            </div>

            <style>
                .sa-alert{
                    display:flex; align-items:flex-start; gap:10px;
                    padding:12px 14px; border-radius:10px; margin:12px 0;
                    border:1px solid transparent; box-shadow:0 6px 18px rgba(10,37,64,.06);
                }
                .sa-alert i{ font-size:20px; line-height:1; margin-top:2px; }
                .sa-alert__text{ line-height:1.5; color:#1f2937; }
                .sa-alert__close{
                    margin-left:auto; border:none; background:transparent; cursor:pointer;
                    font-size:20px; line-height:1; color:#6b7280;
                }
                .sa-alert__close:hover{ color:#111827; }
                .sa-alert--success{
                    background:#ecfdf5; border-color:#a7f3d0; /* xanh l√° nh·∫°t */
                }
                .sa-alert--success i{ color:#059669; }

                @media (max-width: 480px){
                    .sa-alert{ padding:10px 12px; border-radius:12px; }
                    .sa-alert i{ font-size:18px; }
                }
            </style>


        </section>
    </div>
    @if (!auth('customer')->check())
        <div id="loginRequireModal" class="lr-backdrop" role="dialog" aria-modal="true" aria-labelledby="lrTitle" aria-describedby="lrDesc">
            <div class="lr-card">
                <div class="lr-icon" aria-hidden="true">üîí</div>
                <h3 id="lrTitle" class="lr-title">C·∫ßn ƒëƒÉng nh·∫≠p ƒë·ªÉ ti·∫øp t·ª•c</h3>
                <p id="lrDesc" class="lr-desc">
                    Vui l√≤ng ƒëƒÉng nh·∫≠p tr∆∞·ªõc khi g·ª≠i b√†i vi·∫øt. B·∫°n c√≥ th·ªÉ qu·∫£n l√Ω c√°c b√†i ƒë√£ g·ª≠i trong m·ª•c <strong>Qu·∫£n l√Ω t√†i kho·∫£n</strong>.
                </p>
                <div class="lr-actions">
                    <a class="lr-btn lr-primary" href="{{ route('front.home-page') }}#login">ƒêƒÉng nh·∫≠p</a>
                </div>
            </div>
        </div>

        <style>
            /* Kh√≥a cu·ªôn & l√†m m·ªù ph·∫ßn n·ªôi dung khi modal m·ªü */
            body.lr-open { overflow: hidden; }
            body.lr-open .content { filter: blur(4px); pointer-events: none; }

            /* Backdrop ph·ªß to√†n m√†n h√¨nh */
            .lr-backdrop{
                position: fixed; inset: 0;
                background: rgba(17,24,39,.55);
                backdrop-filter: blur(2px);
                display: grid; place-items: center;
                z-index: 2147483000;
                padding: 16px;
                animation: lrFade .15s ease-out both;
            }
            @keyframes lrFade { from { opacity: 0 } to { opacity: 1 } }

            /* Th·∫ª th√¥ng b√°o */
            .lr-card{
                width: min(520px, 92vw);
                background: #fff;
                border-radius: 14px;
                padding: 20px 18px;
                box-shadow: 0 18px 60px rgba(0,0,0,.25);
                text-align: center;
                animation: lrPop .18s ease-out both;
            }
            @keyframes lrPop {
                from { transform: translateY(6px) scale(.98); opacity:.9 }
                to   { transform: translateY(0)   scale(1);    opacity:1 }
            }

            .lr-icon{ font-size: 36px; margin-bottom: 8px }
            .lr-title{ margin: 0 0 6px; font-size: 20px; font-weight: 800; color:#111827 }
            .lr-desc{ margin: 0 8px 16px; color:#4b5563; line-height: 1.55 }

            .lr-actions{ display: flex; gap: 10px; justify-content: center; }
            .lr-btn{
                display:inline-flex; align-items:center; justify-content:center;
                padding: 10px 14px; border-radius: 999px; text-decoration:none; font-weight:700;
                border: 1px solid transparent; min-width: 120px;
            }
            .lr-primary{ background:#27408B; color:#fff; box-shadow:0 8px 22px rgba(95,39,205,.22); }
            .lr-primary:hover{ filter: brightness(0.96); }
            .lr-ghost{ background:#fff; color:#111827; border-color:#E5E7EB; }
            .lr-ghost:hover{ background:#F9FAFB; }

            @media (max-width: 480px){
                .lr-card{ padding:16px 14px; border-radius:12px }
                .lr-title{ font-size:18px }
                .lr-desc{ font-size:14px }
                .lr-actions{ flex-direction: column; }
                .lr-btn{ width:100% }
            }
        </style>

        <script>
            // M·ªü modal ngay khi DOM s·∫µn s√†ng
            document.addEventListener('DOMContentLoaded', function(){
                document.body.classList.add('lr-open');
                // Kh√¥ng cho ƒë√≥ng b·∫±ng ESC ho·∫∑c click n·ªÅn ƒë·ªÉ "bu·ªôc" ƒëƒÉng nh·∫≠p
                // N·∫øu mu·ªën cho ƒë√≥ng t·∫°m th·ªùi, b·∫°n c√≥ th·ªÉ g·ª° b·ªè ƒëo·∫°n ch·∫∑n d∆∞·ªõi.
                window.addEventListener('keydown', function(e){
                    if (e.key === 'Escape') e.preventDefault();
                });
                document.getElementById('loginRequireModal').addEventListener('click', function(e){
                    // ch·∫∑n click n·ªÅn
                    if (e.target === this) e.preventDefault();
                });
            });
        </script>
    @endif
@endsection

@push('scripts')

<script src="https://cdn.ckeditor.com/ckeditor5/41.4.2/classic/ckeditor.js"></script>

    <script>
        (function(){
            // Char counter for title
            const title = document.getElementById('title');
            const titleCount = document.getElementById('titleCount');
            const updateCount = () => titleCount.textContent = (title.value || '').length;
            title.addEventListener('input', updateCount); updateCount();

            let editor;

            ClassicEditor.create(document.querySelector('#contentEditor'), {
                toolbar: ['heading','|','bold','italic','link','|','bulletedList','numberedList','|','blockQuote','|','undo','redo']
            }).then(e => {
                editor = e;
                // n·∫øu form edit c√≥ s·∫µn d·ªØ li·ªáu, ƒë·ªï v√†o editor
                const hidden = document.getElementById('content_html');
                if (hidden.value) editor.setData(hidden.value);

                // lu√¥n ƒë·ªìng b·ªô v·ªÅ textarea m·ªói khi g√µ
                editor.model.document.on('change:data', () => {
                    hidden.value = editor.getData();
                });

                // ti·ªán: expose ƒë·ªÉ n∆°i kh√°c c√≥ th·ªÉ g·ªçi
                window._ck = editor;
            }).catch(console.error);





            // Dropzone + file validation
            const dropzone = document.getElementById('dropzone');
            const fileInput = document.getElementById('fileInput');
            const fileMeta  = document.getElementById('fileMeta');
            const MAX_SIZE = 10 * 1024 * 1024; // 10MB
            const ALLOW = ['application/pdf','application/msword',
                'application/vnd.openxmlformats-officedocument.wordprocessingml.document'];

            function renderFileMeta(file){
                fileMeta.style.display = 'block';
                fileMeta.textContent = `${file.name} ‚Äî ${(file.size/1024/1024).toFixed(2)} MB`;
            }
            function validateFile(file){
                if (!file) return true;
                if (!ALLOW.includes(file.type) && !/\.(pdf|doc|docx)$/i.test(file.name)) {
                    alert('T·ªáp kh√¥ng h·ª£p l·ªá. Ch·ªâ ch·∫•p nh·∫≠n .doc, .docx ho·∫∑c .pdf');
                    fileInput.value = '';
                    fileMeta.style.display = 'none';
                    return false;
                }
                if (file.size > MAX_SIZE){
                    alert('K√≠ch th∆∞·ªõc t·ªáp v∆∞·ª£t qu√° 10MB');
                    fileInput.value = '';
                    fileMeta.style.display = 'none';
                    return false;
                }
                return true;
            }
            fileInput.addEventListener('change', (e)=>{
                const f = e.target.files[0];
                if (validateFile(f)) renderFileMeta(f);
            });

            // Drag & drop UX
            ['dragenter','dragover'].forEach(evt => {
                dropzone.addEventListener(evt, e => {
                    e.preventDefault(); e.stopPropagation();
                    dropzone.style.borderColor = '#27408B';
                    dropzone.style.background = '#eef0ff';
                });
            });
            ['dragleave','drop'].forEach(evt => {
                dropzone.addEventListener(evt, e => {
                    e.preventDefault(); e.stopPropagation();
                    dropzone.style.borderColor = '#c7c8d2';
                    dropzone.style.background = '#f9fafb';
                });
            });
            dropzone.addEventListener('drop', e => {
                const f = e.dataTransfer.files[0];
                if (validateFile(f)) {
                    // put file into input
                    const dt = new DataTransfer();
                    dt.items.add(f);
                    fileInput.files = dt.files;
                    renderFileMeta(f);
                }
            });

            // Submit handler: show loading, simple client-side check
        })();
    </script>

    <script>
        app.controller('Post', function ($rootScope, $scope, $sce, $interval) {
            $scope.errors = [];
            $scope.post = {};
            $scope.loading = false;

            function resetSendPostForm($scope){
                const form = document.getElementById('articleForm');
                if (form) form.reset();

                // CKEditor 5
                if (window._ck && typeof window._ck.setData === 'function') {
                    window._ck.setData('');
                }

                // File input + dropzone meta
                const fileInput = document.getElementById('fileInput');
                if (fileInput) fileInput.value = '';
                const fileMeta = document.getElementById('fileMeta');
                if (fileMeta){ fileMeta.style.display = 'none'; fileMeta.textContent = ''; }
                const dropzone = document.getElementById('dropzone');
                if (dropzone){
                    dropzone.style.borderColor = '#c7c8d2';
                    dropzone.style.background  = '#f9fafb';
                }

                // ƒê·∫øm k√Ω t·ª± ti√™u ƒë·ªÅ
                const title = document.getElementById('title');
                const titleCount = document.getElementById('titleCount');
                if (title && titleCount){
                    titleCount.textContent = (title.value || '').length;
                } else if (titleCount){
                    titleCount.textContent = '0';
                }

                // Angular models
                if ($scope){
                    $scope.post   = {};
                    $scope.errors = {};
                    $scope.loading = false;
                }

                // N√∫t g·ª≠i (n·∫øu c√≥ class loading)
                const submitBtn = document.getElementById('submitBtn');
                if (submitBtn){
                    submitBtn.classList.remove('loading');
                    submitBtn.disabled = false;
                }
            }

            $scope.submitNotice = { show: false };

            $scope.submit = function (e) {
                if (e) e.preventDefault();
                var form = document.getElementById('articleForm');
                if (!form.checkValidity()) { form.reportValidity(); return; }

                var contentHtml = (window._ck ? window._ck.getData() : document.getElementById('contentEditor').value || '');
                var fd = new FormData();
                fd.append('title', $scope.post.title || '');
                fd.append('author_name', $scope.post.author_name || '');
                fd.append('author_email', $scope.post.author_email || '');
                fd.append('content_html', contentHtml);
                if ($scope.post.attachment) fd.append('attachment', $scope.post.attachment);
                $scope.loading = true;

                $.ajax({
                    type: 'POST',
                    url:  "{{ route('front.submitSendPost') }}",
                    headers: {
                        'X-CSRF-TOKEN': CSRF_TOKEN
                    },
                    data: fd,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        if (response.success) {
                            $scope.errors = [];
                            toastr.success(response.message);
                            $scope.submitNotice.show = true;

                            if (typeof $scope.$evalAsync === 'function') {
                                $scope.$evalAsync(function(){
                                    resetSendPostForm($scope);

                                    // cu·ªôn t·ªõi th√¥ng b√°o
                                    var el = document.getElementById('submitSuccess');
                                    if (el) el.scrollIntoView({ behavior: 'smooth', block: 'start' });

                                });
                            } else {
                                resetSendPostForm($scope);
                                if (typeof $scope.$apply === 'function') $scope.$apply();

                                // cu·ªôn t·ªõi th√¥ng b√°o
                                var el2 = document.getElementById('submitSuccess');
                                if (el2) el2.scrollIntoView({ behavior: 'smooth', block: 'start' });
                            }
                        } else {
                            $scope.errors = response.errors;
                            toastr.warning(response.message);
                        }
                    },
                    error: function () {
                        toastr.error('ƒê√£ c√≥ l·ªói x·∫£y ra');
                    },
                    complete: function () {
                        $scope.loading = false;
                        $scope.$apply();
                    }
                });


            }
        })
    </script>

@endpush
